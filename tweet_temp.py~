#!/usr/bin/python
# -*- coding: utf-8 -*-

import tweepy
from datetime import datetime, timedelta
import am2320
import subprocess
import time

### Import the bot's information
### consumer_key, consumer_secret, access_token, access_token_secret
from passward_bot import *

### Air Conditioner Command
ON_CMD = '/home/naoya/c/sendir /home/naoya/c/pon.data 3 24'
OFF_CMD = '/home/naoya/c/sendir /home/naoya/c/poff.data 3 24'

CHK_INTERVAL_MIN = 60

def now_str():
    return datetime.now().strftime(' (%Y/%m/%d %H:%M)')

def my_reply(api, reply_to_status, text):
    screen_name = reply_to_status.author.screen_name.encode("UTF-8")
    return api.update_status('@' + screen_name + " " + text + now_str(), \
                             in_reply_to_status_id = reply_to_status.id)

if __name__ == "__main__":

    # Authentication
    auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
    auth.set_access_token(access_token, access_token_secret)

    api = tweepy.API(auth)

    # tweet temparature and humidity
    am_obj = am2320.Thermo()
    tmp = am_obj.getTmp()
    hum = am_obj.getHum()
    body = 'ただいまの室温: ' + str(tmp) \
           + '度、湿度:' + str(hum) + '%' + now_str()
    print body
    api.update_status(body)

    # メンションから "つけて" / "けして" を探し、
    # あればエアコンにコマンドを送る
    # 最近のリプライから走査し、ヒットしたらreturn
    for status in api.mentions_timeline(count=20):
        print status.created_at+timedelta(hours=9) #GMT+9
        #print status.id
        if datetime.now() - status.created_at \
           <= timedelta(hours=9, minutes=CHK_INTERVAL_MIN): #GMT+9
            if status.text.find(u'つけて') >= 0 and status.text.find(u'けして') < 0:
                subprocess.call(ON_CMD,shell=True)
                time.sleep(0.5)
                subprocess.call(ON_CMD,shell=True)
                my_reply(api, status, "エアコンを付けました")
                print "ON"
                break
            
            elif status.text.find(u'つけて') < 0 and status.text.find(u'けして') >= 0:
                subprocess.call(OFF_CMD,shell=True)
                time.sleep(0.5)
                subprocess.call(OFF_CMD,shell=True)
                my_reply(api, status, "エアコンを消しました")
                print "OFF"
                break
            
            else:
                my_reply(api, status, "わかりません。")
                print "解釈不能"

    # ユーザのフォローを取得
    # user = api.get_user('eggplant60')
    # print user.screen_name
    # print user.followers_count
    # for friend in user.friends():
    #     print friend.screen_name
